# Builds the web api and trained model into a container

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - pipeline-api.yaml
      - manifests/*
      - catnotcat/*

resources: 
  repositories:
   - repository: self
  pipelines:
  - pipeline: "model"
    source: catnotcat.model
    trigger:
      branches:  
        include:  
        - master

variables:
  dockerRegistryServiceConnection: '1282d892-cc76-4458-ad8d-bddcb35089c0'
  
stages:
- stage: Build
  displayName: 'Build and Push Container'
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'd94fc176-cdf1-44e9-a9a2-5ef29d1d995c'
        definition: '6'
        specificBuildWithTriggering: true
        buildVersionToDownload: 'latest'
        artifactName: 'model'
        targetPath: '$(Build.SourcesDirectory)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'jasoncabotmscatnotcat'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(Build.BuildId)
    - task: PublishPipelineArtifact@1
      displayName: "Publish Kubernetes Manifest"
      inputs:
        path: 'manifests'
        artifact: manifests
- stage: DeployDev
  displayName: 'Deploy API to Dev Environment'
  jobs:
  - deployment: 'Dev'
    pool:
      vmImage: 'ubuntu-latest'
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@1
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'dev-catnotcat-dev-1574110897431'
                namespace: 'dev'
                manifests: '$(Pipeline.Workspace)/api-deployment.yaml'
                containers: 'catnotcat.azurecr.io/jasoncabotmscatnotcat:$(Build.BuildId)'
- stage: DeployStaging
  displayName: 'Promote API to Staging Environment'
  jobs:
  - deployment: 'Staging'
    pool:
      vmImage: 'ubuntu-latest'
    environment: staging
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@1
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'staging-catnotcat-staging-1574110945185'
                namespace: 'staging'
                manifests: '$(Pipeline.Workspace)/api-deployment.yaml'
                containers: 'catnotcat.azurecr.io/jasoncabotmscatnotcat:$(Build.BuildId)'
- stage: DeployProd
  displayName: 'Promote API to Production Environment'
  jobs:
  - deployment: 'Production'
    pool:
      vmImage: 'ubuntu-latest'
    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@1
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'prod-catnotcat-prod-1574110997641'
                namespace: 'prod'
                manifests: '$(Pipeline.Workspace)/api-deployment.yaml'
                containers: 'catnotcat.azurecr.io/jasoncabotmscatnotcat:$(Build.BuildId)'
